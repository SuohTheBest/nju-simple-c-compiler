FUNCTION Swap :
PARAM v1
PARAM v2
PARAM v3
t0 := v2 * #4
t1 := v1 + t0
t2 := *t1
v4 := t2
t3 := v2 * #4
t4 := v1 + t3
t5 := v3 * #4
t6 := v1 + t5
t7 := *t6
*t4 := t7
t8 := v3 * #4
t9 := v1 + t8
*t9 := v4
RETURN #0
FUNCTION Partition :
PARAM v6
PARAM v7
PARAM v8
t10 := v7 * #4
t11 := v6 + t10
t12 := *t11
v9 := t12
LABEL L0 :
IF v7 < v8 GOTO L1
GOTO L2
LABEL L1 :
LABEL L3 :
IF v7 < v8 GOTO L6
GOTO L5
LABEL L6 :
t13 := v8 * #4
t14 := v6 + t13
t15 := *t14
IF t15 >= v9 GOTO L4
GOTO L5
LABEL L4 :
t16 := v8 - #1
v8 := t16
GOTO L3
LABEL L5 :
ARG v8
ARG v7
ARG v6
t17 := CALL Swap
LABEL L7 :
IF v7 < v8 GOTO L10
GOTO L9
LABEL L10 :
t18 := v7 * #4
t19 := v6 + t18
t20 := *t19
IF t20 <= v9 GOTO L8
GOTO L9
LABEL L8 :
t21 := v7 + #1
v7 := t21
GOTO L7
LABEL L9 :
ARG v8
ARG v7
ARG v6
t22 := CALL Swap
GOTO L0
LABEL L2 :
RETURN v7
FUNCTION QuickSort :
PARAM v11
PARAM v12
PARAM v13
IF v12 < v13 GOTO L11
GOTO L12
LABEL L11 :
ARG v13
ARG v12
ARG v11
t23 := CALL Partition
v14 := t23
t24 := v14 - #1
ARG t24
ARG v12
ARG v11
t25 := CALL QuickSort
t26 := v14 + #1
ARG v13
ARG t26
ARG v11
t27 := CALL QuickSort
LABEL L12 :
RETURN #0
FUNCTION main :
v15 := #8
DEC v16 32
v17 := &v16
v18 := #0
LABEL L13 :
IF v18 < v15 GOTO L14
GOTO L15
LABEL L14 :
t28 := v18 * #4
t29 := v17 + t28
READ t30
*t29 := t30
t31 := v18 + #1
v18 := t31
GOTO L13
LABEL L15 :
t32 := v15 - #1
ARG t32
ARG #0
ARG v17
t33 := CALL QuickSort
v18 := #0
LABEL L16 :
IF v18 < v15 GOTO L17
GOTO L18
LABEL L17 :
t34 := v18 * #4
t35 := v17 + t34
t36 := *t35
WRITE t36
t37 := v18 + #1
v18 := t37
GOTO L16
LABEL L18 :
RETURN #0
