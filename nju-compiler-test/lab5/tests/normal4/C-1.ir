FUNCTION factorial :
PARAM v0
v1 := #1
LABEL L0 :
IF v0 > #1 GOTO L1
GOTO L2
LABEL L1 :
t0 := v1 * v0
v1 := t0
t1 := v0 - #1
v0 := t1
GOTO L0
LABEL L2 :
RETURN v1
FUNCTION cal_combiniation :
PARAM v2
PARAM v3
ARG v2
t2 := CALL factorial
ARG v3
t3 := CALL factorial
t4 := v2 - v3
ARG t4
t5 := CALL factorial
t6 := t3 * t5
t7 := t2 / t6
RETURN t7
FUNCTION cal_permutation :
PARAM v4
PARAM v5
ARG v4
t8 := CALL factorial
t9 := v4 - v5
ARG t9
t10 := CALL factorial
t11 := t8 / t10
RETURN t11
FUNCTION isqrt :
PARAM v6
v7 := #0
LABEL L3 :
IF v7 < v6 GOTO L4
GOTO L5
LABEL L4 :
t12 := v7 * v7
IF t12 <= v6 GOTO L8
GOTO L7
LABEL L8 :
t13 := v7 + #1
t14 := v7 + #1
t15 := t13 * t14
IF t15 > v6 GOTO L6
GOTO L7
LABEL L6 :
RETURN v7
LABEL L7 :
t16 := v7 + #1
v7 := t16
GOTO L3
LABEL L5 :
t17 := #0 - #1
RETURN t17
FUNCTION mod :
PARAM v8
PARAM v9
IF v8 < #0 GOTO L9
GOTO L12
LABEL L12 :
IF v9 <= #0 GOTO L9
GOTO L10
LABEL L9 :
t18 := #0 - #1
RETURN t18
GOTO L11
LABEL L10 :
t19 := v8 / v9
t20 := t19 * v9
t21 := v8 - t20
RETURN t21
LABEL L11 :
FUNCTION is_prime :
PARAM v10
v11 := #2
ARG v10
t22 := CALL isqrt
v12 := t22
LABEL L13 :
IF v11 <= v12 GOTO L14
GOTO L15
LABEL L14 :
ARG v11
ARG v10
t23 := CALL mod
IF t23 == #0 GOTO L16
GOTO L17
LABEL L16 :
RETURN #0
LABEL L17 :
t24 := v11 + #1
v11 := t24
GOTO L13
LABEL L15 :
RETURN #1
FUNCTION main :
READ t25
v13 := t25
READ t26
v14 := t26
ARG v14
ARG v13
t27 := CALL cal_combiniation
v15 := t27
ARG v14
ARG v13
t28 := CALL cal_permutation
v16 := t28
v17 := #1
LABEL L18 :
IF v17 <= v15 GOTO L19
GOTO L20
LABEL L19 :
ARG v17
t29 := CALL is_prime
IF t29 != #0 GOTO L21
GOTO L22
LABEL L21 :
WRITE v17
LABEL L22 :
t30 := v17 + #1
v17 := t30
GOTO L18
LABEL L20 :
v17 := #1
LABEL L23 :
IF v17 <= v16 GOTO L24
GOTO L25
LABEL L24 :
ARG v17
t31 := CALL is_prime
IF t31 != #0 GOTO L26
GOTO L27
LABEL L26 :
WRITE v17
LABEL L27 :
t32 := v17 + #1
v17 := t32
GOTO L23
LABEL L25 :
RETURN #0
